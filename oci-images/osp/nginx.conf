daemon off;
worker_processes auto;

error_log /dev/stdout info;

events {
  worker_connections 1024;
  multi_accept on;
  use epoll;
}

#rtmp_socket_dir /tmp;
rtmp_auto_push on;
rtmp_auto_push_reconnect 1s;

http {
  proxy_cache_path    /tmp levels=1:2 keys_zone=auth_cache:5m max_size=1g inactive=24h;
  server {
    server_name _;
    server_tokens off;
    listen 80;

    #listen 443 ssl;
    #ssl_certificate /certs/fullchain.pem;
    #ssl_certificate_key /certs/privkey.pem;

    location / {
      proxy_pass http://core:5000;
      proxy_redirect off;

      proxy_set_header Host              $host;
      proxy_set_header X-Host            $http_host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /socket.io {
      #proxy_set_header Host              $host;
      proxy_set_header X-Host            $http_host;
      #proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      # prevents 502 bad gateway error
      proxy_buffers 8 32k;
      proxy_buffer_size 64k;

      proxy_redirect off;

      # enables WS support
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";

      proxy_pass http://core:5000/socket.io;
    }

    location /http-bind/ {
      proxy_pass  http://ejabberd:5280/http-bind;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_redirect off;
      proxy_buffering off;
      proxy_read_timeout 65s;
      proxy_send_timeout 65s;
      keepalive_timeout 65s;
      tcp_nodelay on;
    }

    location /ospAuth {
      internal;

      set $channelID "";

      if ($request_uri ~* /videos/(.+)/(.+)) {
        set $channelID $1;
      }

      if ($request_uri ~* /videos/(.*)/clips/(.*)\.(.+)) {
        set $channelID $1;
      }

      if ($request_uri ~* /stream-thumb/(.*)\.(.+)) {
        set $channelID $1;
      }

      if ($request_uri ~* /live-adapt/(.*)\.m3u8) {
        set $channelID $1;
      }

      if ($request_uri ~* /live-adapt/(.*)_(.*)/(.*)\.(.*)) {
        set $channelID $1;
      }

      if ($request_uri ~* /live/(.+)/(.+)) {
        set $channelID $1;
      }

      if ($request_uri ~* /edge/(.+)/(.+)) {
        set $channelID $1;
      }

      if ($request_uri ~* /edge-adapt/(.*)\.m3u8) {
        set $channelID $1;
      }

      if ($request_uri ~* /edge-adapt/(.*)_(.*)/(.*)\.(.*)) {
        set $channelID $1;
      }

      proxy_pass              http://core:5000/auth;
      proxy_pass_request_body off;
      proxy_set_header        Content-Length "";
      proxy_set_header        X-Original-URI $request_uri;
      proxy_set_header        X-Channel-ID $channelID;
      proxy_cache             auth_cache;
      proxy_cache_key         "$cookie_ospSession$http_x_auth_token$channelID";
      proxy_cache_valid       200 10m;
      proxy_ignore_headers    Set-Cookie;
    }

    location /videos {
      auth_request /ospAuth;
      alias /var/www/videos;
    }

    location /videos/temp {
      alias /var/www/videos/temp;
    }

    location /stream-thumb {
      auth_request /ospAuth;
      alias /var/www/stream-thumb;
    }

    location /live-adapt {
      auth_request /ospAuth;
      alias /var/www/live-adapt;
    }

    location /live {
      auth_request /ospAuth;
      alias /var/www/live;
    }

    location ~ /images(.*) {
      # Disable cache
      add_header Cache-Control no-cache;

      # CORS setup
      add_header 'Access-Control-Allow-Origin' '*' always;
      add_header 'Access-Control-Expose-Headers' 'Content-Length';

      # allow CORS preflight requests
      if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204;
      }

      types {
        application/vnd.apple.mpegurl m3u8;
        video/mp2t ts;
      }

      root /var/www;
    }
  }
}

rtmp {
  server {
    listen 1935;
    chunk_size 4096;
    ping 30s;
    ping_timeout 15s;
    drop_idle_publisher 15s;

    application stream {
      live on;
      record off;

      allow publish all;
      #deny publish all;
      allow play 127.0.0.1;

      on_publish http://rtmp:5000/auth-key;
      on_publish_done http://rtmp:5000/deauth-user;

    }
    application stream-data {
      live on;

      allow publish all;
      #deny publish all;
      allow play 127.0.0.1;

      on_publish http://rtmp:5000/auth-user;
      push rtmp://127.0.0.1:1935/live/;
      push rtmp://127.0.0.1:1935/record/;

      hls on;
      hls_path /var/www/live;
      hls_fragment 1;
      hls_playlist_length 30s;

      hls_nested on;
      hls_fragment_naming sequential;

      recorder thumbnail {
        record video;
        record_max_frames 600;
        record_path /var/www/stream-thumb;
        record_interval 120s;

        exec_record_done ffmpeg -ss 00:00:01 -i $path -vcodec png -vframes 1 -an -f rawvideo -s 384x216  -y /var/www/stream-thumb/$name.png;
        exec_record_done ffmpeg -ss 00:00:00 -t 3 -i $path -filter_complex "[0:v] fps=30,scale=w=384:h=-1,split [a][b];[a] palettegen=stats_mode=single [p];[b][p] paletteuse=new=1" -y /var/www/stream-thumb/$name.gif;
      }
    }

    application stream-data-adapt {
      live on;

      allow publish all;
      #deny publish all;
      allow play 127.0.0.1;

      on_publish http://rtmp:5000/auth-user;
      push rtmp://127.0.0.1:1935/live/;
      push rtmp://127.0.0.1:1935/record/;

      exec ffmpeg -i rtmp://127.0.0.1:1935/live/$name
        -c:v libx264 -c:a aac -b:a 128k -vf "scale=-2:720" -vsync 1 -copyts -start_at_zero -sws_flags lanczos -r 30 -g 30 -keyint_min 30 -force_key_frames "expr:gte(t,n_forced*1)" -tune zerolatency -preset ultrafast -crf 28 -maxrate 2096k -bufsize 4192k -threads 16 -f flv rtmp://localhost:1935/show/$name_720
        -c:v libx264 -c:a aac -b:a 96k -vf "scale=-2:480" -vsync 1 -copyts -start_at_zero -sws_flags lanczos -r 30 -g 30 -keyint_min 30 -force_key_frames "expr:gte(t,n_forced*1)" -tune zerolatency -preset ultrafast -crf 28 -maxrate 1200k -bufsize 2400k -threads 16 -f flv rtmp://localhost:1935/show/$name_480
        -c copy -f flv rtmp://localhost:1935/show/$name_src;


      recorder thumbnail {
        record video;
        record_max_frames 600;
        record_path /var/www/stream-thumb;
        record_interval 120s;

        exec_record_done ffmpeg -ss 00:00:01 -i $path -vcodec png -vframes 1 -an -f rawvideo -s 384x216  -y /var/www/stream-thumb/$name.png;
        exec_record_done ffmpeg -ss 00:00:00 -t 3 -i $path -filter_complex "[0:v] fps=30,scale=w=384:h=-1,split [a][b];[a] palettegen=stats_mode=single [p];[b][p] paletteuse=new=1" -y /var/www/stream-thumb/$name.gif;
      }

    }

    application show {
      live on;
      allow publish 127.0.0.1;
      allow play 127.0.0.1;

      hls on;
      hls_path /var/www/live-adapt;
      hls_nested on;
      hls_fragment 1;
      hls_playlist_length 30s;

      hls_fragment_naming sequential;

      record off;

      # Instruct clients to adjust resolution according to bandwidth
      hls_variant _480 BANDWIDTH=1200000; # Medium bitrate, SD resolution
      hls_variant _720 BANDWIDTH=2048000; # High bitrate, HD 720p resolution
      hls_variant _src BANDWIDTH=4096000; # Source bitrate, source resolution
    }

    application record {
      live on;

      allow publish 127.0.0.1;
      allow play 127.0.0.1;

      on_publish http://rtmp:5000/auth-record;
      exec_push mkdir -m 764 /var/www/videos/$name;

      recorder all {
        record all;
        record_path /tmp;
        record_unique on;
        record_suffix _%Y%m%d_%H%M%S.flv;
        exec_record_done bash -c "ffmpeg -y -i $path -codec copy -movflags +faststart /var/www/videos/$name/$basename.mp4 && rm $path";
        exec_record_done mv /var/www/stream-thumb/$name.png /var/www/videos/$name/$basename.png;
        exec_record_done mv /var/www/stream-thumb/$name.gif /var/www/videos/$name/$basename.gif;
        on_record_done http://rtmp:5000/deauth-record;
      }
    }

    application live {
      live on;
      allow publish 127.0.0.1;
      allow play all;

      on_play http://rtmp:5000/playbackAuth;
    }
  }
}
